def get_tf_config(params):
	tf_config = {
		'vars': {},
		'resources': {
			'ec2': [
				"provider \"aws\" {",
				''.join(["  region  = \"", params['region'], "\""]),
				''.join(["  shared_credentials_file = \"", params['credential_path'], "\""]),
				"}",
				"",
				"resource \"aws_security_group\" \"ec2_sg\" {",
				"  name   = \"ec2_sg\"# SSH access from anywhere",
				"  ingress {",
				"    from_port   = 22",
				"    to_port     = 22",
				"    protocol    = \"tcp\"",
				"    cidr_blocks = [\"0.0.0.0/0\"]",
				"  }",
				"  ingress {",
				"    from_port   = 80",
				"    to_port     = 80",
				"    protocol    = \"tcp\"",
				"    cidr_blocks = [\"0.0.0.0/0\"]",
				"  }",
				"   ingress {",
				"    from_port   = 5601",
				"    to_port     = 5601",
				"    protocol    = \"tcp\"",
				"    cidr_blocks = [\"0.0.0.0/0\"]",
				"  }",
				"   ingress {",
				"    from_port   = 9200",
				"    to_port     = 9200",
				"    protocol    = \"tcp\"",
				"    cidr_blocks = [\"0.0.0.0/0\"]",
				"  }",
				"  egress {",
				"    from_port   = 0",
				"    to_port     = 0",
				"    protocol    = \"-1\"",
				"    cidr_blocks = [\"0.0.0.0/0\"]",
				"  }",
				"}",
				"",
				"resource \"aws_iam_role\" \"ec2_role\" {",
				"  name = \"ec2_role\"",
				"  assume_role_policy = <<EOF",
				"{",
				"  \"Version\": \"2012-10-17\",",
				"  \"Statement\": [",
				"    {",
				"      \"Effect\": \"Allow\",",
				"      \"Principal\": { \"Service\": \"ec2.amazonaws.com\"},",
				"      \"Action\": \"sts:AssumeRole\"",
				"    }",
				"  ]",
				"}",
				"EOF",
				"}",
				"",
				"resource \"tls_private_key\" \"ec2_key\" {",
				"  algorithm = \"RSA\"",
				"  rsa_bits  = 4096",
				"}",
				"",
				"resource \"aws_key_pair\" \"generated_key\" {",
				"  key_name   = \"deploy_key\"",
				"  public_key = tls_private_key.ec2_key.public_key_openssh",
				"}",
				"",
				"resource \"aws_iam_instance_profile\" \"ec2_profile\" {",
				"  name = \"ec2_profile\"",
				"  role = aws_iam_role.ec2_role.name",
				"}",
				"",
				"resource \"aws_instance\" \"task_ec2_instance\" {",
				''.join(["  ami		   = \"", params['ami'], "\""]),
				''.join(["  instance_type = \"", params['instance_type'], "\""]),
				''.join(["  user_data	 = file(\"", params['task_script_path'], "\")"]),
				"  tags = {",
				''.join(["    Name  = \"", params['tagname'], "\""]),
				"  }",
				"  vpc_security_group_ids = [aws_security_group.ec2_sg.id]",
				"  key_name               = aws_key_pair.generated_key.key_name",
				"  iam_instance_profile   = \"ec2_profile\"",
				"}",
				"",
			]
		},
		'output': {
			'ec2': [
				"output \"output_public_ip\" {",
				"  value = aws_instance.task_ec2_instance.public_ip",
				"}",
				"",
				"output \"output_instance_id\" {",
				"  value = aws_instance.task_ec2_instance.id",
				"}",
				"",
				"output \"output_private_key\" {",
				"  value = tls_private_key.ec2_key.private_key_pem",
				"}"
			]
		}
	}
	return tf_config