'''
  - example of the analysis for this interface: 
    - change analysis relates to information interfaces (question, problem), logical interfaces (function, intent, pattern) and potential interfaces (variance, risk, certainty) 
    - change analysis analyzes relationships between objects/attributes/functions 
    - change analysis is important for identifying: 
      - how relationship structures (distortions, origins, combinations, sequences) relate 
      - when change is imminent to assess the value of identifying future states (gather more data for a prediction function, implement versioning, build interfaces for change into the function by parameterizing/abstracting it) 
      - what is the best way to frame a change (on what base, with what variables that describe the change, in what spaces/systems, as a combination of what functions, as a change of what uniqueness) 
    - related to the information (certainty) and potential (uncertainty, risk, predictions, possibility, probability) indexes 
    - variance is semantically the opposite index (gap) to the filter index (limit) 
    - variance/difference type analysis: 
        - part of the problem with using a one-directional vector to model a relationship is that the underlying parameter (usually time) may not be relevant for predicting the relationship evolution 
          - rather than modeling it by a standard of changes over time, it can be modeled by a standard of changes over variance potentials 
            - will a particular variance source change compoundingly or converge to a constant in all possible parameterizations of that variance source 
            - does a particular variance source have the potential to generate variance or will it eventually become static in all possible implementations, meaning it either: 
                - doesn't exist (at any time), like a final output that doesnt ever return to interact with other systems as an input 
                - is one of the few things that does exist (across all times), like a concept that never stops influencing variance 
        - this is the problem of adding/fitting/reducing structure from a gap in structure, which can be used to solve problems like: 
          - prediction: which variables are explanatory, given what we can measure 
          - causation: how alternatives can converge to the same level of variance or change patterns 
        - reducing gaps in rule enforcement to shapes or paths has its own set of rules 
        - this interface can also be used for specific attribute analysis, of properties that descend from concepts & take form in a specific problem space: 
          - the power concept interface (has implementations that look like trust, info, etc) 
          - the balance concept interface (has implementations that look like symmetry, justice, etc) 
        - what is the path definitely not, based on various maximized measures of similarity? 
        - what attributes & attribute sets & attribute dependency trees differ 
        - what is transformation cost/potential between objects 
        - what is divergence distance between generative paths for each object 
          - example: "what is the probable function linking these variables, given that it is an adjacent transform of a square (related function type), & a distant transform of a manifold (unrelated function type)?" 
        - variance accretion 
        - what variance is unexplained 
        - at what point does a variable become relevant to another variable interaction layer? 
        - how do constants accrete between rules, like caps to keep variance from flowing in to corners or creating boundary-invalidating openings in a system/component boundary? 
        - what causes variables to cascade across layers, creating fractal variables? 
        - delegation of variance into systems/types/functions/variables/constants 
        - what type of variable is it? (object-differentiating/identifying attribute, emergent specific/abstract property, direct function input/output) 
        - how does the variable relate to other variables? (decisive metric, substitutable alternative, collinear) 
        - given that variance flows through systems in patterns, what are the common variance shapes, given host system type & structure + set of unknowns? 
        - as change increases: 
          - how do interface objects (functionality/intent/potential) or change objects (structures/functions/variables/embedded parameters/spaces) change 
          - which standards/interfaces/change types are adjacent (change framed based on deviation from a standard, like deviating from the correct order or probability distribution, measured by degree of stacked distortions) 
          - which difference definition applies (changes framed based on difference type, optionally including difference from value, symmetry, limit, origin, number type, pattern) 
          - what probabilities/possibilities become possible/adjacent (adjacent meaning findable/generatable in structural dimensions/on the structural interface) 
        - as a concept having structure (like power: degree of independence) changes, does the change definition erode (previously distant points become more equal to adjacent points, so the meaning of information about position/dependency erodes, as power to move between them increases) 
        - where can change be stored/routed in a system: if there is demand for change (stressors demanding new functionality) but all components but one are maximizing their change handlers, then you know theres one potential variable where change will gather/be routed, if its possible to route change from the variance injection point to that variable's causal stack at some layer/point 
  - attributes: 
    - uniqueness (is the change composable with core distortion functions or is it formed with different functions than other changes, implying its origin is external to the system) 
    - inevitability (is the change pre-determined by the system, in which case its just a continuation of a state progression rather than a fundamental change or source of variance) 
    - directness (adjacent change) 
    - explicit/implicit (certain/uncertain change) 
    - degree (how much was changed, to what level of distortion) 
    - change types (create, cause, force, guarantee, convert, enable, depend, connect, structure) 
    - different ways to create the change (if there are many ways to create it, each individual way is insignificant) 
  - objects (equality (alternate, interchangeable), difference (extreme, opposite, contradictory), change source) 
  - concepts (base, similarity) 
  - structures: 
        - variance structures (gap, leak, cascades/catalysts, accretions/injections, compounding variance, variance building a new interface, variance distribution/alignment, unenforced rules, measurement limits, open systems) 
        - change structures (variables, dependencies, updates, replacements, distortions) 
          - base: varying change bases (what a change's differentiating output is defined in terms of/in relation to) allows various difference types to be measured (removing common parameters/attributes or standardizing by a base), such as change defined as: 
          
              - network position change
              - work to create the change (inevitability)
              - different ways to create the change (if there are many ways to create it, each individual way is insignificant)
              - attribute value change
              - context/system change
              - difference from different origins (randomness, core, default, etc)
              - change in change structures (change stack, circuit, sequence) or functions (derive change, derive change base, convert, differentiate)
              - state change (requiring a new position on a state network)
              - variable change (requiring more/less/new variables or fundamentally altered versions of existing variables)
              - adjacent similarities ('if you remove attribute x, are they equal?')
              - interface change (what interfaces are adjacent/determining/generative/differentiating across the change)
              - interface objects (what concepts/intents differ, does potential increase, are other change types enabled across the change)
              - change based on system vertices (imminent to/distant from a phase shift, at an intersection, changing interaction layers)
        
          - similarities ('if you remove attribute x, are they equal?') 
        - certainty structures (patterns, rules, constants, assumptions, limits, metrics, information, similarities/matches/alignments (intents/incentives, demand/supply, limit/variation), definitions) 
  

  - functions: 
        - function to derive change/change type/change base 
        - function to differentiate 
        - function to convert: change a component into another (useful for identifying alternate paths) 
        - function to deconstruct: change an object into its components (useful for identifying origins & common components) 
        - function to distort: apply a distortion function to acquire a difference object (a value difference, an extreme, a magnification, a limit, etc) 
        - function to map change types to dimensions 
        - function to identify dimensions where change types change (an aggregate, interface, or deciding dimension where change type is uncertain but not random), with embedded parameters & bases for framing changes of a certain type 
        - function to identify the variance structures (gaps/cascades/filters) in a system, to identify the best dimension sets to frame certain change types in 
  - change types: 
        - change from different bases (randomness, core, default, etc) 
        - change in change structures (change stack, circuit, sequence) or functions (derive change, derive change base, convert, differentiate) 
        - state change (requiring a new position on a state network) 
        - variable change (requiring more/less/new variables or fundamentally altered versions of existing variables) 
        - interface change (what interfaces are adjacent/determining/generative/differentiating across the change) 
        - interface object change (what concepts/intents differ, does potential increase, are other change types enabled across the change) 
        - change based on system vertices (imminent to/distant from a phase shift, at an intersection, changing interaction layers) 
        - changing attributes (like systematization/stabilization) based on a concept (like randomness) 
        - changing object change based on a changing interface (change stack, like changing orientation of an object within a system that is changing) 
        - changing change types (variance leak, variance cascades/activation, variance injection, compounding variance, variance approaching an interface, variance distribution) 
        - as change increases, what change objects (types/rules/rates/direction) alter position/connection/distance/existence? 
        - does a change increase or reduce: attributes/functions of change like a change definition/change sources/core change functions/change rate/change type/change interface 
        - what changes develop into change structures like randomness/constants/change cascades 
        - change can be framed on other bases like potential, because potential is a related object to change (if there is no potential, there is no change) 
        - certain change types have certain intents associated 
          - potential-based change is aligned with intents like prediction (finding patterns like convergence or cascades) 
        - some changes are complex (changing many different things) that cannot be clearly depicted as an increase or decrease, but are still noteworthy as they are adjacent to an increase or decrease (increase the probability of an increase or decrease) even if they dont register on that dimension set 
          - in this case, a set or network of related spaces can be used to represent the change 
          - other spaces can also change what value means in that space, to represent more complex attributes like concepts (potential), where a change alters several metadata attributes of that base concept (potential direction/reversibility/alternative count/probability of alternatives leading to more potential) 
          - for example, a change may not directly/measurably increase the potential of a system, but it could be similar to changes that preceded an increase in potential of a system, so it should be represented on a pattern dimension set (representing the similarity to the other pattern) or a similarity/change dimension set (depicting the similarity to that other preceding pattern's intra-differences within itself), even if it can only be represented as a point rather than a change on the potential dimension set 
          - patterns are related to potential bc if something is too compliant with patterns, its less likely to change, which is an object of potential 
        - with regard to graphing potential itself, it's more useful to use position as a base rather than time 
          - how does potential change with respect to starting position? 
          - if a starting position is isolated, there is less potential for dependence & more potential for independence (the net impact on overall potential is variable) 
          - this reveals more information about actual potential change types by placing useful limits on value ranges 
  - examples: 
      - when approximating area of an object that is similar to a square but has a convex arc instead of a side (like an opened envelope), it may be more efficient to: 
          - calculate the integral of the arc-ed shape and add it to the square area 
          - alternatively, if those functions arent available or if the arc is a very low angle and similar enough to a straight line: 
            - the arc can be broken into sub-lines & the area of those shapes calculated & then added to the square area 
          - rather than deriving an integration method for the non-linear side, it may be more efficient to arrange questions to solve the problem based on change: 
            - question sequence based on change: 
              - 'what is the non-linear object definition' (arc)  
                - 'how does area change with angle of arc' (in proportion to degree of distortion from line) 
                  - 'what distortion functions generate the arc from the distortion degree' 
                    - 'what distortion is present in the observed object' 
            - this is a specific case of answering the general question: 
              - 'how does this parameter (area) change with respect to distortion from default object (line)' - a question that can be broken into the questions: 
                - 'what degree of distortion is the different object (arc) at' (how many distorting n iterations build the arc from the line, which is similar to calculating the log base line of the arc, given the available distortion operation to connect them) 
                  - 'what is the impact of each distortion on the parameter (area)' (what is the impact of each distorting n iteration on area) 
          - it's also like calculating: (number of distortions between line & arc) ^ (impact of each distortion on area) = difference in area between line & arc, 
            which is using a pattern of change (impact of distortions on area) instead of calculating a way to approximate the area parameter with integration (aggregating subsets that are easier to calculate) 
'''