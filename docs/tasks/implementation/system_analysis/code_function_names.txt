/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/apply_functions.py:def convert_solution_steps_to_problem_steps(problem_metadata, solution_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/apply_functions.py:def convert_solution_to_problem_step(object_map, solution_step):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/apply_functions.py:def get_specific_solution(abstract_solution, problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/apply_functions.py:def apply_solution(problem_metadata, solution):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/apply_functions.py:def apply_step(problem_metadata, problem_step):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/definition_functions.py:def get_concept_metadata(concept_name):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/definition_functions.py:def get_function_metadata(fdef, delimiter):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/definition_functions.py:			syntax_function_name = ''.join(['def ', function_name, '('])
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/definition_functions.py:								if 'def ' in line:
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/definition_functions.py:				function_def = {'name': function_name, 'params': function_params, 'code': function_code}
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/definition_functions.py:def get_problem_metadata(problem_def_path):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/definition_functions.py:	problem_def = get_data(problem_def_path)
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/filter_functions.py:def get_relevant_path(problem_metadata, relevance_filters):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/filter_functions.py:def get_relevance_filters(relevance_intents, problem_object):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/fit_functions.py:def get_relationship_between_objects(source, target):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/fit_functions.py:def get_brief_keyword(keyword):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/function_functions.py:def get_functions_for_object_combination(solution_object, solution_functions):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/function_functions.py:def get_function_prerequisites(function_name, function_order):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/generate_datasets.py:def generate_datasets(generate_source, generate_target, index):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/generate_datasets.py:def generate_dataset(element_list, generate_target, rows, write):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_best_price.py:def get_div_list(urls):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_best_price.py:def get_best_price_per_unit(div_list):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_best_price.py:def convert_to_grams(value, size):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_best_price.py:def get_best_price(product_name):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_article_intents(article, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_key_sentences(article, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_sentence_type(line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_hypothesis(article):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_fact(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_topic(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_variable(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_element(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_causal_layer(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_intent(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_function(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_strategy(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_insight(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_fallacy(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_analogy(article, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_argument(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_assumption(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_counterexample(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_context(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_implications(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_conclusions(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_meaning(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_key(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_layer(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_network(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_path(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_equivalence(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_combination(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_example(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_error(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_limit(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def get_extreme_examples(types, patterns, variables, objects, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def get_rules_from_patterns(patterns, objects, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def get_types_from_patterns(patterns, variables, objects, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def get_variables_from_patterns(patterns, rules, objects, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_protocol(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_alternative(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_incentive(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_interface(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_filter(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_perspective(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_equilibrium(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_efficiency(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_potential(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_structure(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_symmetry(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_difference(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_similarity(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_explanation(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_problem(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_solution(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_priority(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_core_function(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_dependency(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def find_impact(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def impact_match(f_impact, impact, object_name, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def update_impact(f_impact, impact, object_name, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_conceptual_objects.py:def get_verb_impact(function, object_name, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_object_similarity(verification_dict, output_dict):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_dose(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_metric(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def get_common_property(objects, patterns, metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_generic_medication(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_synthesis(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_stressor(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_primary_condition(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_side_effect(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_compound(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_symptom(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_mechanism(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_test(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_adjacent(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_sub_component(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_related_component(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_drug(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def find_treatment(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def add_related_metadata(object_type, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_medical_objects.py:def filter_source_list(object_type):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_data_store(index, database, operation, args):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_data_from_source(source, keyword, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_batch(source, start, keyword, articles):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def process_articles(articles, source, keyword, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_article_from_id(id_value, source):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_text_from_nodes(entry, element_name):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def add_row(row, index, empty_index, rows):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def build_indexes(database, args, filters, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_metadata(line, title, word_map, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def extract_objects_and_patterns(row, object_type, search_pattern_key, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_patterns_and_objects_in_line(line, search_pattern_key, row, object_type, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def apply_find_function(object_type, subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def get_structural_metadata(row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_metadata.py:def assemble_pattern_indexes(object_types):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_pos.py:def get_tags():
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_pos.py:def get_empty_index(av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def index_as_functions(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_relationship(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def get_net_impact_relation(relation, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def get_combinations(object_list, line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def get_operator(word, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def convert_to_words(line, variables, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_clause(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def split_by_delimiters(line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def order_clauses(line, clauses_by_punctuation, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def filter_clauses(clauses, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def get_combined_operator(combined, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def get_meaning_score(phrase, line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_modifier(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_phrase(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_verb_phrase(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_noun_phrase(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_attribute(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def find_function(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_structural_objects.py:def split_by_subset(items, check_var, check_list, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_pattern_config(av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def update_patterns(av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def reverse_sort(map_list):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_args(arg_list, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_vars():
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def aggregate_synonyms_of_type(av, synonym_type):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def fill_synonyms(path, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def process_synonym_element(y, keyword, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_general_pos(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_specific_pos(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_all_pos(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def is_isolated_alt(subset, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def append_list(index_lists, sub_list, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_alts(pattern, index_lists, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_all_combinations(alt_lists):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_alt_sets(pattern, all_alts, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_alt_patterns(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_pattern_subsets(pattern, variables, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_indexed_patterns(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def correct(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_correct_patterns(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_content_from_wiki(keyword, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def find_type(word, pos, title, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_type_patterns(line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_pattern_type_patterns(line, generated_patterns, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def consolidate_patterns(all_patterns, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_words_in_common(source_words, target_words):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_synonym_patterns(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_operator_patterns(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_polarity_pattern(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_subjectivity_pattern(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def generate_function_patterns(pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_all_versions(pattern, version_types, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def convert_to_pos_type(word, nonnumeric_w, pos_type, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def is_supported_tag(var, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_nonnumeric(var, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def read(path):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_stem(word):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def find_delimiter(line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_delimiter(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_polarity(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_subjectivity(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_blob(string):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def replace_names(row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_determiner_ratio(word):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_ngrams_by_position(word_list, word, x, direction):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def is_condition(asp_words, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_sentence_delimiter(text):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def standardize_delimiter(text):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def standardize_punctuation(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def remove_stopwords(line, word_map):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def replace_quotes_with_parenthesis(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def select_option(alt_phrase, word_map):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_charge_of_word(word, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_similarity(base_word, new_word, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_similarity_to_title(title, row):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_local_database(database_dir, object_types):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_local_data(paths, docs):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def save(path, data):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def write_csv(rows, header_list, path):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def downloads(paths):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def replace_with_syns(words, word_map, check_types, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_names(line):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_common_words(line, distance, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_definitions(define_word, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:                shortest_def = get_shortest_definition(defs)
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_definition_keywords(word):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_syn_from_definition(word, word_pos):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def standard_text_processing(text, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_operator(verb, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_synsets(word, pos, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_synsets_of_type(word, pos_type, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_common_word(word, pos, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def standardize_words(line, get_type, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_synonym_word(word, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_shortest_definition(defs):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:        shortest_def = None
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:                    shortest_def = d
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:                shortest_def = d
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def find_matching_synonym(word, pos, check_types, exclude_types, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def iterate_through_synonyms(av, check_types, word, pos):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def matches(word, word_pos, k, check_type, word_type, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_partial_match(av, word, match_type):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_match_ratio(word, keyword):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def concatenate_species(data):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def conjugate(word, target_pos, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def singularize_word(word, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_pos_line(line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def apply_pattern_map(line, pattern_map, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_variables_for_pattern(line, pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def derive_and_store_patterns(object_type, index, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_matching_subsets(line, pattern_key, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def apply_pattern(subset, source_pattern, target_pattern, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_pattern_source_subsets(line, pattern, get_type, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_pattern_source_words(source_line, exclude_list):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def convert_to_operators(line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_nltk_pos(word, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def find_ngrams(line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_ngrams_of_type(pos_type, line, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_ngram_combinations(word_list, x):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_index_type(object_type, av, categories):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/interface_functions.py:def identify_interfaces(system, interface_type):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/interface_functions.py:						rule_def = {'objects': [], 'functions': [], 'attributes': []}
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/interface_functions.py:def define_interface(system):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/interface_functions.py:def convert_to_interface(system, interface):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/interface_functions.py:def match_interface(system):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/map_functions.py:def get_object_map(problem_metadata, solution_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/map_functions.py:def find_matching_object_in_problem_space(problem_metadata, problem_object, solution_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/map_functions.py:def makes_sense(problem_metadata, problem_object, matched_problem_object, solution_objects):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def derive_objects_in_network(subset, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def fit(structure1, structure2):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def reduce(structure1, structure2):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def find_definition(type, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def fill_definition(object_type, row, av):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def get_random_subset_mix(values):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def get_random_value(values):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def test_compliance_with_prop(attribute, constructed_object):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/object_model.py:def apply_attribute_function(object_type, attribute, row):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/system_functions.py:def define_system(system):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/system_functions.py:	system_def = {'objects': [], 'attributes': [], 'functions': [], 'interfaces': []}
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/system_functions.py:def identify_objects(system):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/system_functions.py:def identify_attributes(system):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/system_functions.py:def identify_functions(system):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/system_functions.py:def identify_sub_systems(system):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:def find_type(problem_object, solution_objects):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:							solution_def = object_defs[key][solution_object]
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:							system_definition = solution_def['definitions']['system'] if 'definitions' in solution_def and 'system' in solution_def['definitions'] else None
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:			for solution_def in solution_defs:
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:def remove_stopwords(definition):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:def get_codebase_functions():
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:	cmd = [f"""grep -r 'def ' {cwd} --include='*.py' >> {output_name}"""]
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:	''' /Users/jjezewski/Documents/build_a_cure/find_existing_solutions/get_vars.py:def get_partial_match(av, word, match_type): '''
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:					for fdef in function_defs.split('\n'):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/type_functions.py:						delimiter = '.py:def '
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def find_subdict_in_dict(function_dict, found_dict, search_term):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def find_functions_in_dict(function_dict, found_functions, search_term):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def flatten_dict(problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def iterate_dict(key, values, flattened):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def remove_file(file_path):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def get_pos(word):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def get_data(file_path):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/utils.py:def stringify_metadata(metadata_object):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def condense_problem_statement(problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def solve_problem_with_problem_type_conversion(problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def apply_solution_to_problem(problem_metadata, abstract_solution_type):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_steps_from_solution_type(abstract_solution_type, solution_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_object_metadata(object_name, object_type):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_solution_type(solution_step):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_insights(problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def convert_to_solved_problem(problem_metadata, target_problem_type):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def convert_to_interface_problem(problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def convert_solved_problem_to_problem_type(solved_converted_problem, original_problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def convert_problem_to_problem_type(source_problem_type_metadata, target_problem_type_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def test_solution(solved_original_problem, problem_metadata):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def is_problem_reduced(problem_metadata, solved_original_problem):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def build_object(object_type, object_name):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_function_list():
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_type_words():
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_function_in_string(string):
/Users/jjezewski/Documents/build_a_cure/find_existing_solutions/workflow1.py:def get_objects_in_string(string):
